==14273== Cachegrind, a cache and branch-prediction profiler
==14273== Copyright (C) 2002-2015, and GNU GPL'd, by Nicholas Nethercote et al.
==14273== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==14273== Command: /home/emanueleghelfi/Dev/ristretto/build/tools/caffe test -model=models_mnist/net_integer_power_of_2_weights.prototxt -weights=models_mnist/snapshot/_integer_power_of_2_weights_iter_100.caffemodel -iterations=1
==14273== 
--14273-- warning: L3 cache found, using its data for the LL simulation.
I0512 13:54:20.586411 14273 caffe.cpp:246] Use CPU.
I0512 13:54:20.975508 14273 net.cpp:313] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0512 13:54:21.052114 14273 net.cpp:49] Initializing net from parameters: 
name: "mnist"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "dataset/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv1"
  type: "ConvolutionRistretto"
  bottom: "data"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 20
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
  quantization_param {
    precision: INTEGER_POWER_OF_2_WEIGHTS
    bw_layer_in: 8
    bw_layer_out: 8
    fl_layer_in: 8
    fl_layer_out: 6
    exp_min: -8
    exp_max: -1
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv2"
  type: "ConvolutionRistretto"
  bottom: "pool1"
  top: "conv2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
  quantization_param {
    precision: INTEGER_POWER_OF_2_WEIGHTS
    bw_layer_in: 8
    bw_layer_out: 8
    fl_layer_in: 6
    fl_layer_out: 5
    exp_min: -8
    exp_max: -1
  }
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "FcRistretto"
  bottom: "pool2"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 500
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
  quantization_param {
    precision: INTEGER_POWER_OF_2_WEIGHTS
    bw_layer_in: 8
    bw_layer_out: 8
    fl_layer_in: 5
    fl_layer_out: 5
    exp_min: -8
    exp_max: -1
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "FcRistretto"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
  quantization_param {
    precision: INTEGER_POWER_OF_2_WEIGHTS
    bw_layer_in: 8
    bw_layer_out: 8
    fl_layer_in: 5
    fl_layer_out: 4
    exp_min: -8
    exp_max: -1
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip2"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
I0512 13:54:21.111182 14273 layer_factory.hpp:77] Creating layer mnist
I0512 13:54:21.159456 14273 net.cpp:91] Creating Layer mnist
I0512 13:54:21.162643 14273 net.cpp:443] mnist -> data
I0512 13:54:21.182008 14273 net.cpp:443] mnist -> label
I0512 13:54:21.215804 14290 db_lmdb.cpp:35] Opened lmdb dataset/mnist/mnist_test_lmdb
I0512 13:54:21.269053 14273 data_layer.cpp:41] output data size: 100,1,28,28
I0512 13:54:21.273783 14273 net.cpp:141] Setting up mnist
I0512 13:54:21.278820 14273 net.cpp:148] Top shape: 100 1 28 28 (78400)
I0512 13:54:21.280086 14273 net.cpp:148] Top shape: 100 (100)
I0512 13:54:21.280550 14273 net.cpp:156] Memory required for data: 314000
I0512 13:54:21.282085 14273 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0512 13:54:21.284330 14273 net.cpp:91] Creating Layer label_mnist_1_split
I0512 13:54:21.309301 14273 net.cpp:469] label_mnist_1_split <- label
I0512 13:54:21.315012 14273 net.cpp:443] label_mnist_1_split -> label_mnist_1_split_0
I0512 13:54:21.316226 14273 net.cpp:443] label_mnist_1_split -> label_mnist_1_split_1
I0512 13:54:21.318704 14273 net.cpp:141] Setting up label_mnist_1_split
I0512 13:54:21.325065 14273 net.cpp:148] Top shape: 100 (100)
I0512 13:54:21.325845 14273 net.cpp:148] Top shape: 100 (100)
I0512 13:54:21.325991 14273 net.cpp:156] Memory required for data: 314800
I0512 13:54:21.326143 14273 layer_factory.hpp:77] Creating layer conv1
I0512 13:54:21.331434 14273 net.cpp:91] Creating Layer conv1
I0512 13:54:21.331645 14273 net.cpp:469] conv1 <- data
I0512 13:54:21.332772 14273 net.cpp:443] conv1 -> conv1
I0512 13:54:21.371059 14273 net.cpp:141] Setting up conv1
I0512 13:54:21.371362 14273 net.cpp:148] Top shape: 100 20 24 24 (1152000)
I0512 13:54:21.371500 14273 net.cpp:156] Memory required for data: 4922800
I0512 13:54:21.381626 14273 layer_factory.hpp:77] Creating layer pool1
I0512 13:54:21.383571 14273 net.cpp:91] Creating Layer pool1
I0512 13:54:21.383743 14273 net.cpp:469] pool1 <- conv1
I0512 13:54:21.384181 14273 net.cpp:443] pool1 -> pool1
I0512 13:54:21.392513 14273 net.cpp:141] Setting up pool1
I0512 13:54:21.392784 14273 net.cpp:148] Top shape: 100 20 12 12 (288000)
I0512 13:54:21.392920 14273 net.cpp:156] Memory required for data: 6074800
I0512 13:54:21.393055 14273 layer_factory.hpp:77] Creating layer conv2
I0512 13:54:21.393369 14273 net.cpp:91] Creating Layer conv2
I0512 13:54:21.393507 14273 net.cpp:469] conv2 <- pool1
I0512 13:54:21.393729 14273 net.cpp:443] conv2 -> conv2
I0512 13:54:21.399693 14273 net.cpp:141] Setting up conv2
I0512 13:54:21.399986 14273 net.cpp:148] Top shape: 100 50 8 8 (320000)
I0512 13:54:21.400122 14273 net.cpp:156] Memory required for data: 7354800
I0512 13:54:21.401656 14273 layer_factory.hpp:77] Creating layer pool2
I0512 13:54:21.401882 14273 net.cpp:91] Creating Layer pool2
I0512 13:54:21.402027 14273 net.cpp:469] pool2 <- conv2
I0512 13:54:21.402218 14273 net.cpp:443] pool2 -> pool2
I0512 13:54:21.402490 14273 net.cpp:141] Setting up pool2
I0512 13:54:21.402694 14273 net.cpp:148] Top shape: 100 50 4 4 (80000)
I0512 13:54:21.402822 14273 net.cpp:156] Memory required for data: 7674800
I0512 13:54:21.402952 14273 layer_factory.hpp:77] Creating layer ip1
I0512 13:54:21.404968 14273 net.cpp:91] Creating Layer ip1
I0512 13:54:21.405139 14273 net.cpp:469] ip1 <- pool2
I0512 13:54:21.405371 14273 net.cpp:443] ip1 -> ip1
I0512 13:54:21.480445 14273 net.cpp:141] Setting up ip1
I0512 13:54:21.480733 14273 net.cpp:148] Top shape: 100 500 (50000)
I0512 13:54:21.480885 14273 net.cpp:156] Memory required for data: 7874800
I0512 13:54:21.481199 14273 layer_factory.hpp:77] Creating layer relu1
I0512 13:54:21.482118 14273 net.cpp:91] Creating Layer relu1
I0512 13:54:21.482280 14273 net.cpp:469] relu1 <- ip1
I0512 13:54:21.482800 14273 net.cpp:430] relu1 -> ip1 (in-place)
I0512 13:54:21.484277 14273 net.cpp:141] Setting up relu1
I0512 13:54:21.484669 14273 net.cpp:148] Top shape: 100 500 (50000)
I0512 13:54:21.484802 14273 net.cpp:156] Memory required for data: 8074800
I0512 13:54:21.484935 14273 layer_factory.hpp:77] Creating layer ip2
I0512 13:54:21.485229 14273 net.cpp:91] Creating Layer ip2
I0512 13:54:21.485364 14273 net.cpp:469] ip2 <- ip1
I0512 13:54:21.485599 14273 net.cpp:443] ip2 -> ip2
I0512 13:54:21.487045 14273 net.cpp:141] Setting up ip2
I0512 13:54:21.487264 14273 net.cpp:148] Top shape: 100 10 (1000)
I0512 13:54:21.487396 14273 net.cpp:156] Memory required for data: 8078800
I0512 13:54:21.487644 14273 layer_factory.hpp:77] Creating layer ip2_ip2_0_split
I0512 13:54:21.487828 14273 net.cpp:91] Creating Layer ip2_ip2_0_split
I0512 13:54:21.487958 14273 net.cpp:469] ip2_ip2_0_split <- ip2
I0512 13:54:21.488148 14273 net.cpp:443] ip2_ip2_0_split -> ip2_ip2_0_split_0
I0512 13:54:21.488677 14273 net.cpp:443] ip2_ip2_0_split -> ip2_ip2_0_split_1
I0512 13:54:21.488945 14273 net.cpp:141] Setting up ip2_ip2_0_split
I0512 13:54:21.489133 14273 net.cpp:148] Top shape: 100 10 (1000)
I0512 13:54:21.489303 14273 net.cpp:148] Top shape: 100 10 (1000)
I0512 13:54:21.489418 14273 net.cpp:156] Memory required for data: 8086800
I0512 13:54:21.489828 14273 layer_factory.hpp:77] Creating layer loss
I0512 13:54:21.491242 14273 net.cpp:91] Creating Layer loss
I0512 13:54:21.491444 14273 net.cpp:469] loss <- ip2_ip2_0_split_0
I0512 13:54:21.492686 14273 net.cpp:469] loss <- label_mnist_1_split_0
I0512 13:54:21.494050 14273 net.cpp:443] loss -> loss
I0512 13:54:21.496445 14273 layer_factory.hpp:77] Creating layer loss
I0512 13:54:21.510800 14273 net.cpp:141] Setting up loss
I0512 13:54:21.511170 14273 net.cpp:148] Top shape: (1)
I0512 13:54:21.511762 14273 net.cpp:151]     with loss weight 1
I0512 13:54:21.517560 14273 net.cpp:156] Memory required for data: 8086804
I0512 13:54:21.519311 14273 layer_factory.hpp:77] Creating layer accuracy
I0512 13:54:21.520750 14273 net.cpp:91] Creating Layer accuracy
I0512 13:54:21.520928 14273 net.cpp:469] accuracy <- ip2_ip2_0_split_1
I0512 13:54:21.521103 14273 net.cpp:469] accuracy <- label_mnist_1_split_1
I0512 13:54:21.521438 14273 net.cpp:443] accuracy -> accuracy
I0512 13:54:21.524260 14273 net.cpp:141] Setting up accuracy
I0512 13:54:21.524508 14273 net.cpp:148] Top shape: (1)
I0512 13:54:21.524637 14273 net.cpp:156] Memory required for data: 8086808
I0512 13:54:21.526696 14273 net.cpp:219] accuracy does not need backward computation.
I0512 13:54:21.528789 14273 net.cpp:217] loss needs backward computation.
I0512 13:54:21.529933 14273 net.cpp:217] ip2_ip2_0_split needs backward computation.
I0512 13:54:21.530261 14273 net.cpp:217] ip2 needs backward computation.
I0512 13:54:21.530413 14273 net.cpp:217] relu1 needs backward computation.
I0512 13:54:21.530936 14273 net.cpp:217] ip1 needs backward computation.
I0512 13:54:21.531088 14273 net.cpp:217] pool2 needs backward computation.
I0512 13:54:21.531229 14273 net.cpp:217] conv2 needs backward computation.
I0512 13:54:21.531365 14273 net.cpp:217] pool1 needs backward computation.
I0512 13:54:21.531497 14273 net.cpp:217] conv1 needs backward computation.
I0512 13:54:21.531774 14273 net.cpp:219] label_mnist_1_split does not need backward computation.
I0512 13:54:21.531929 14273 net.cpp:219] mnist does not need backward computation.
I0512 13:54:21.532510 14273 net.cpp:261] This network produces output accuracy
I0512 13:54:21.533449 14273 net.cpp:261] This network produces output loss
I0512 13:54:21.535199 14273 net.cpp:274] Network initialization done.
I0512 13:54:21.661957 14273 caffe.cpp:252] Running for 1 iterations.
I0512 13:54:24.682693 14273 caffe.cpp:275] Batch 0, accuracy = 0.94
I0512 13:54:24.684586 14273 caffe.cpp:275] Batch 0, loss = 0.261828
I0512 13:54:24.685014 14273 caffe.cpp:280] Loss: 0.261828
I0512 13:54:24.687067 14273 caffe.cpp:292] accuracy = 0.94
I0512 13:54:24.689664 14273 caffe.cpp:292] loss = 0.261828 (* 1 = 0.261828 loss)
==14273== 
==14273== I   refs:      758,612,302
==14273== I1  misses:        123,716
==14273== LLi misses:         21,624
==14273== I1  miss rate:        0.02%
==14273== LLi miss rate:        0.00%
==14273== 
==14273== D   refs:      235,506,442  (186,972,416 rd   + 48,534,026 wr)
==14273== D1  misses:      5,672,408  (  4,510,587 rd   +  1,161,821 wr)
==14273== LLd misses:        651,744  (    302,610 rd   +    349,134 wr)
==14273== D1  miss rate:         2.4% (        2.4%     +        2.4%  )
==14273== LLd miss rate:         0.3% (        0.2%     +        0.7%  )
==14273== 
==14273== LL refs:         5,796,124  (  4,634,303 rd   +  1,161,821 wr)
==14273== LL misses:         673,368  (    324,234 rd   +    349,134 wr)
==14273== LL miss rate:          0.1% (        0.0%     +        0.7%  )
